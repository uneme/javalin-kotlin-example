group 'com.example.project'
version '1.0-SNAPSHOT'

ext {
    // essential libraries
    javalin_version = "3.5.0"
    slf4j_version = "1.7.28"
    velocity_version = "2.1"
    // database libraries
    h2_version = "1.4.200"
    hikaricp_version = "3.4.1"
    // authentication libraries
    paseto_version = "0.5.0"
    kmehrunesjwt_version = "v0.2"
    // unit test
    jupiter_version = "5.5.2"
    mockito_version = "1.10.19"
}

buildscript {
    ext.kotlin_version = "1.3.+"

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://dl.bintray.com/terl/lazysodium-maven" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'application'
apply plugin: 'kotlin'

mainClassName = "com.example.project.ApplicationKt"

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    // essential libraries
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "io.javalin:javalin:$javalin_version"
    compile "org.slf4j:slf4j-simple:$slf4j_version"
    compile "org.apache.velocity:velocity-engine-core:$velocity_version"
    // database libraries
    compile "com.h2database:h2:$h2_version"
    compile "com.zaxxer:HikariCP:$hikaricp_version"
    // authentication libraries
    compile "net.aholbrook.paseto:meta:$paseto_version"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
    testImplementation "org.mockito:mockito-all:$mockito_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiter_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
  manifest { attributes 'Main-Class': mainClassName }
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task console(type: Exec) {
  commandLine "kotlinc-jvm", "-cp", sourceSets["main"].runtimeClasspath.join(":")
  standardInput = System.in
}

test {
    useJUnitPlatform()
}
